package com.damianogiusti.hilt;

import android.os.Bundle;

import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import dagger.hilt.android.components.FragmentComponent;
import dagger.hilt.android.internal.builders.FragmentComponentBuilder;
import dagger.hilt.android.internal.managers.FragmentComponentManager;
import dagger.hilt.internal.GeneratedComponent;

/**
 * Base class for the Activity used during tests. This class provides a custom
 * {@link FragmentComponentBuilder} implementation that overrides the default {@link FragmentComponent}
 * which is generated by Hilt. The custom {@link FragmentComponent} allows to override the default
 * {@link androidx.lifecycle.ViewModelProvider.Factory} generated by Hilt.
 * <p>
 * To get ready, follow these steps:
 * <p>
 * 1) create a package named <code>androidx.fragment.app.testing</code> in your
 * <code>androidTest</code> source set;
 * <p>
 * 2) create a Java class named <code>FragmentScenario$EmptyFragmentActivity</code>;
 * <p>
 * 3) let it extend <code>HiltBaseActivity</code>.
 * <p>
 * Created by Damiano Giusti on 09/12/2020.
 */
public class HiltFragmentBaseActivity extends Hilt_AnnotatedHiltFragmentBaseActivity implements
    GeneratedComponent,
    FragmentComponentManager.FragmentComponentBuilderEntryPoint {

    /**
     * Copied from internal property
     * <code>FragmentScenario.EmptyFragmentActivity.THEME_EXTRAS_BUNDLE_KEY</code>
     */
    static final String THEME_EXTRAS_BUNDLE_KEY =
        "androidx.fragment.app.testing.FragmentScenario" +
            ".EmptyFragmentActivity.THEME_EXTRAS_BUNDLE_KEY";

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // Theme will always be present since the extensions library
        // always puts the theme resource as Int extra.
        final int theme = getIntent().getIntExtra(THEME_EXTRAS_BUNDLE_KEY, -1);
        setTheme(theme);
    }

    @Override
    protected void inject() {
        // Override super.inject() to skip the downcast to `AnnotatedHiltBaseActivity`.
        // This activity will only be a container for Fragments, so there is no
        // need to inject dependencies here.
    }

    @Override
    public FragmentComponentBuilder fragmentComponentBuilder() {
        return new FragmentComponentBuilder() {

            private Fragment fragment;

            @Override
            public FragmentComponentBuilder fragment(Fragment fragment) {
                this.fragment = fragment;
                return this;
            }

            @Override
            public FragmentComponent build() {
                return HiltFragmentTestRunner.instantiateFragmentComponent(fragment);
            }
        };
    }
}
